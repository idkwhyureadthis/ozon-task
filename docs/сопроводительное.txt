Тут я бы хотел расписать по поводу выполнения данного тестового
Если быть честным, это был мой первый опыт использование graphql для своих go-проектов, и, как мне кажется, я справился неплохо для данных мне трёх дней
Для того чтобы ускорить вывод комментариев я решил добавить 2 метода их получения:
comments(для родительских комментов)
и
getreplies(для получения следующего уровня вложенности для отдельного комментария)


Так же по поводу 2 видов хранения данных. Прочитав ТЗ, я подумал что под in-memory имелось в виду хранение БД отдельным файлов
(в моём случае sqlite3-БДшка) в том же контейнере,
что и сам микросервис, однако уже почти дописав проект, я понял, что мне стоило это всё делать через резолверы. 


Касаемо тестирования, я получил 33.6% (или 28.8, мне тестировщик выдаёт разные цифры внутри и вне директории)
тестирования на сгенерированном файле в модуле graph, и,
фактически все мои тесты проверяли не только работу самого модуля, но ещё и используемых в резолверах пакетов 
(database, mw, auth, cropstrings, isnumber), так что в моём понимании такого количества тестов было достаточно

Для сетапа всего проекта достаточно заменить конфиг dockercompose-файла, по желанию заменив STORAGE на название базы данных
(например, database.db), и она будет храниться в папке internal/database. После чего просто забилдить docker-compose
Также переменная окружения MIGRATIONS при присвоении ей значения RESET будет перезагружать миграции для базы данных, чтобы этого
не происходило достаточно просто убрать её